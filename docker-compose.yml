version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel-app
    volumes:
      - .:/var/www
    environment:
      - REDIS_HOST=redis
      - WWWUSER=1000
    networks:
      - laravel
    depends_on:
      - db
      - redis
    restart: unless-stopped

  web:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "8000:80"
    volumes:
      - .:/var/www
      - ./docker-compose/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - laravel
    restart: unless-stopped

  db:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: Vid@13579
      MYSQL_DATABASE: laravel_db
      MYSQL_USER: laravel_user
      MYSQL_PASSWORD: laravel_password
    ports:
      - "3307:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - laravel

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - laravel

  websockets:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel-websockets
    command: php artisan websockets:serve --host=0.0.0.0 --port=6001
    ports:
      - "6001:6001"
    volumes:
      - .:/var/www
    environment:
      - REDIS_HOST=redis
    depends_on:
      - app
      - db
      - redis
    networks:
      - laravel
    restart: unless-stopped

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: Vid@13579
    depends_on:
      - db
    networks:
      - laravel

networks:
  laravel:
    driver: bridge

volumes:
  db_data:
  redis_data:
